// Do not edit this file; automatically generated by build.py.
'use strict';


Blockly.Python=new Blockly.Generator("Python");Blockly.Python.addReservedWords("False,None,True,and,as,assert,break,class,continue,def,del,elif,else,except,exec,finally,for,from,global,if,import,in,is,lambda,nonlocal,not,or,pass,print,raise,return,try,while,with,yield,NotImplemented,Ellipsis,__debug__,quit,exit,copyright,license,credits,ArithmeticError,AssertionError,AttributeError,BaseException,BlockingIOError,BrokenPipeError,BufferError,BytesWarning,ChildProcessError,ConnectionAbortedError,ConnectionError,ConnectionRefusedError,ConnectionResetError,DeprecationWarning,EOFError,Ellipsis,EnvironmentError,Exception,FileExistsError,FileNotFoundError,FloatingPointError,FutureWarning,GeneratorExit,IOError,ImportError,ImportWarning,IndentationError,IndexError,InterruptedError,IsADirectoryError,KeyError,KeyboardInterrupt,LookupError,MemoryError,ModuleNotFoundError,NameError,NotADirectoryError,NotImplemented,NotImplementedError,OSError,OverflowError,PendingDeprecationWarning,PermissionError,ProcessLookupError,RecursionError,ReferenceError,ResourceWarning,RuntimeError,RuntimeWarning,StandardError,StopAsyncIteration,StopIteration,SyntaxError,SyntaxWarning,SystemError,SystemExit,TabError,TimeoutError,TypeError,UnboundLocalError,UnicodeDecodeError,UnicodeEncodeError,UnicodeError,UnicodeTranslateError,UnicodeWarning,UserWarning,ValueError,Warning,ZeroDivisionError,_,__build_class__,__debug__,__doc__,__import__,__loader__,__name__,__package__,__spec__,abs,all,any,apply,ascii,basestring,bin,bool,buffer,bytearray,bytes,callable,chr,classmethod,cmp,coerce,compile,complex,copyright,credits,delattr,dict,dir,divmod,enumerate,eval,exec,execfile,exit,file,filter,float,format,frozenset,getattr,globals,hasattr,hash,help,hex,id,input,int,intern,isinstance,issubclass,iter,len,license,list,locals,long,map,max,memoryview,min,next,object,oct,open,ord,pow,print,property,quit,range,raw_input,reduce,reload,repr,reversed,round,set,setattr,slice,sorted,staticmethod,str,sum,super,tuple,type,unichr,unicode,vars,xrange,zip");
Blockly.Python.ORDER_ATOMIC=0;Blockly.Python.ORDER_COLLECTION=1;Blockly.Python.ORDER_STRING_CONVERSION=1;Blockly.Python.ORDER_MEMBER=2.1;Blockly.Python.ORDER_FUNCTION_CALL=2.2;Blockly.Python.ORDER_EXPONENTIATION=3;Blockly.Python.ORDER_UNARY_SIGN=4;Blockly.Python.ORDER_BITWISE_NOT=4;Blockly.Python.ORDER_MULTIPLICATIVE=5;Blockly.Python.ORDER_ADDITIVE=6;Blockly.Python.ORDER_BITWISE_SHIFT=7;Blockly.Python.ORDER_BITWISE_AND=8;Blockly.Python.ORDER_BITWISE_XOR=9;Blockly.Python.ORDER_BITWISE_OR=10;
Blockly.Python.ORDER_RELATIONAL=11;Blockly.Python.ORDER_LOGICAL_NOT=12;Blockly.Python.ORDER_LOGICAL_AND=13;Blockly.Python.ORDER_LOGICAL_OR=14;Blockly.Python.ORDER_CONDITIONAL=15;Blockly.Python.ORDER_LAMBDA=16;Blockly.Python.ORDER_NONE=99;
Blockly.Python.ORDER_OVERRIDES=[[Blockly.Python.ORDER_FUNCTION_CALL,Blockly.Python.ORDER_MEMBER],[Blockly.Python.ORDER_FUNCTION_CALL,Blockly.Python.ORDER_FUNCTION_CALL],[Blockly.Python.ORDER_MEMBER,Blockly.Python.ORDER_MEMBER],[Blockly.Python.ORDER_MEMBER,Blockly.Python.ORDER_FUNCTION_CALL],[Blockly.Python.ORDER_LOGICAL_NOT,Blockly.Python.ORDER_LOGICAL_NOT],[Blockly.Python.ORDER_LOGICAL_AND,Blockly.Python.ORDER_LOGICAL_AND],[Blockly.Python.ORDER_LOGICAL_OR,Blockly.Python.ORDER_LOGICAL_OR]];
Blockly.Python.init=function(a){Blockly.Python.PASS=this.INDENT+"pass\n";Blockly.Python.definitions_=Object.create(null);Blockly.Python.functionNames_=Object.create(null);Blockly.Python.variableDB_?Blockly.Python.variableDB_.reset():Blockly.Python.variableDB_=new Blockly.Names(Blockly.Python.RESERVED_WORDS_);Blockly.Python.variableDB_.setVariableMap(a.getVariableMap());var b=[],c=a.getAllVariables();a.isFlyout||a.getFlyout();for(var d=0;d<c.length;d++)if(b[d]=Blockly.Python.variableDB_.getName(c[d].getId(),
Blockly.Variables.NAME_TYPE),"list"===c[d].type)b[d]+=" = []";else if("func"===c[d].type){var e=Blockly.Blocks.getFuncUniqueId(c[d].name),f=a.getBlockById(e);Blockly.Python.func(f);void 0===Blockly.Blocks.getFuncUniqueDef(e)?b[d]="def "+b[d]+"():\n"+Blockly.Python.PASS:(e=Blockly.Blocks.getFuncUniqueDef(e),b[d]="def "+b[d]+"():\n"+e)}else b[d]+=" = None";a=Blockly.Variables.allDeveloperVariables(a);for(d=0;d<a.length;d++)b.push(Blockly.Python.variableDB_.getName(a[d],Blockly.Names.DEVELOPER_VARIABLE_TYPE)+
" = None");Blockly.Python.definitions_.variables=b.join("\n")};Blockly.Python.finish=function(a){var b=[],c=[],d;for(d in Blockly.Python.definitions_){var e=Blockly.Python.definitions_[d];e.match(/^(from\s+\S+\s+)?import\s+\S+/)?b.push(e):c.push(e)}delete Blockly.Python.definitions_;delete Blockly.Python.functionNames_;Blockly.Python.variableDB_.reset();return(b.join("\n")+"\n\n"+c.join("\n\n")).replace(/\n\n+/g,"\n\n").replace(/\n*$/,"\n\n\n")+a};
Blockly.Python.scrubNakedValue=function(a){return a+"\n"};Blockly.Python.quote_=function(a){a=a.replace(/\\/g,"\\\\").replace(/\n/g,"\\\n").replace(/%/g,"\\%");var b="'";-1!==a.indexOf("'")&&(-1===a.indexOf('"')?b='"':a=a.replace(/'/g,"\\'"));return b+a+b};
Blockly.Python.scrub_=function(a,b){var c="";if(!a.outputConnection||!a.outputConnection.targetConnection){var d=a.getCommentText();(d=Blockly.utils.wrap(d,Blockly.Python.COMMENT_WRAP-3))&&(c=a.getProcedureDef?c+('"""'+d+'\n"""\n'):c+Blockly.Python.prefixLines(d+"\n","# "));for(var e=0;e<a.inputList.length;e++)a.inputList[e].type==Blockly.INPUT_VALUE&&(d=a.inputList[e].connection.targetBlock())&&(d=Blockly.Python.allNestedComments(d))&&(c+=Blockly.Python.prefixLines(d,"# "))}a=a.nextConnection&&a.nextConnection.targetBlock();
a=Blockly.Python.blockToCode(a);return c+b+a};Blockly.Python.getAdjustedInt=function(a,b,c,d){c=c||0;a.workspace.options.oneBasedIndex&&c--;var e=a.workspace.options.oneBasedIndex?"1":"0";a=Blockly.Python.valueToCode(a,b,c?Blockly.Python.ORDER_ADDITIVE:Blockly.Python.ORDER_NONE)||e;Blockly.isNumber(a)?(a=parseInt(a,10)+c,d&&(a=-a)):(a=0<c?"int("+a+" + "+c+")":0>c?"int("+a+" - "+-c+")":"int("+a+")",d&&(a="-"+a));return a};Blockly.Python.colour={};Blockly.Python.colour_picker=function(a){return["'"+a.getFieldValue("COLOUR")+"'",Blockly.Python.ORDER_ATOMIC]};Blockly.Python.colour_random=function(a){Blockly.Python.definitions_.import_random="import random";return["'#%06x' % random.randint(0, 2**24 - 1)",Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.colour_rgb=function(a){var b=Blockly.Python.provideFunction_("colour_rgb",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(r, g, b):","  r = round(min(100, max(0, r)) * 2.55)","  g = round(min(100, max(0, g)) * 2.55)","  b = round(min(100, max(0, b)) * 2.55)","  return '#%02x%02x%02x' % (r, g, b)"]),c=Blockly.Python.valueToCode(a,"RED",Blockly.Python.ORDER_NONE)||0,d=Blockly.Python.valueToCode(a,"GREEN",Blockly.Python.ORDER_NONE)||0;a=Blockly.Python.valueToCode(a,"BLUE",Blockly.Python.ORDER_NONE)||
0;return[b+"("+c+", "+d+", "+a+")",Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.colour_blend=function(a){var b=Blockly.Python.provideFunction_("colour_blend",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(colour1, colour2, ratio):","  r1, r2 = int(colour1[1:3], 16), int(colour2[1:3], 16)","  g1, g2 = int(colour1[3:5], 16), int(colour2[3:5], 16)","  b1, b2 = int(colour1[5:7], 16), int(colour2[5:7], 16)","  ratio = min(1, max(0, ratio))","  r = round(r1 * (1 - ratio) + r2 * ratio)","  g = round(g1 * (1 - ratio) + g2 * ratio)","  b = round(b1 * (1 - ratio) + b2 * ratio)",
"  return '#%02x%02x%02x' % (r, g, b)"]),c=Blockly.Python.valueToCode(a,"COLOUR1",Blockly.Python.ORDER_NONE)||"'#000000'",d=Blockly.Python.valueToCode(a,"COLOUR2",Blockly.Python.ORDER_NONE)||"'#000000'";a=Blockly.Python.valueToCode(a,"RATIO",Blockly.Python.ORDER_NONE)||0;return[b+"("+c+", "+d+", "+a+")",Blockly.Python.ORDER_FUNCTION_CALL]};Blockly.Python.lists={};Blockly.Python.data_listcontents=function(a){return[Blockly.Python.variableDB_.getName(a.getFieldValue("LIST"),Blockly.Variables.NAME_TYPE),Blockly.Python.ORDER_ATOMIC]};Blockly.Python.data_clearlist=function(a){return Blockly.Python.variableDB_.getName(a.getFieldValue("LIST"),Blockly.Variables.NAME_TYPE)+" = []\n"};
Blockly.Python.data_range=function(a){var b=Blockly.Python.valueToCode(a,"NUM1",Blockly.Python.ORDER_NONE)||"0",c=Blockly.Python.valueToCode(a,"NUM2",Blockly.Python.ORDER_NONE)||"0";a=Blockly.Python.valueToCode(a,"STEP",Blockly.Python.ORDER_NONE)||"1";return["range("+b+", "+c+", "+a+")",Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.data_addtolist=function(a){var b=Blockly.Python.variableDB_.getName(a.getFieldValue("LIST"),Blockly.Variables.NAME_TYPE);a=Blockly.Python.valueToCode(a,"ITEM",Blockly.Python.ORDER_NONE)||"0";return b+".append("+a+")\n"};Blockly.Python.data_deleteoflist=function(a){var b=Blockly.Python.variableDB_.getName(a.getFieldValue("LIST"),Blockly.Variables.NAME_TYPE);a=Blockly.Python.valueToCode(a,"INDEX",Blockly.Python.ORDER_MULTIPLICATIVE)||"0";return"del "+b+"["+a+"]\n"};
Blockly.Python.data_listcontainsitem=function(a){var b=Blockly.Python.variableDB_.getName(a.getFieldValue("LIST"),Blockly.Variables.NAME_TYPE);return[(Blockly.Python.valueToCode(a,"ITEM",Blockly.Python.ORDER_NONE)||"0")+" in "+b,Blockly.Python.ORDER_FUNCTION_CALL]};Blockly.Python.data_lengthoflist=function(a){return["len("+Blockly.Python.variableDB_.getName(a.getFieldValue("LIST"),Blockly.Variables.NAME_TYPE)+")",Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.data_itemoflist=function(a){var b=Blockly.Python.variableDB_.getName(a.getFieldValue("LIST"),Blockly.Variables.NAME_TYPE);a=Blockly.Python.valueToCode(a,"INDEX",Blockly.Python.ORDER_MULTIPLICATIVE)||"0";return[b+"["+a+"]",Blockly.Python.ORDER_MEMBER]};
Blockly.Python.data_insertatlist=function(a){var b=Blockly.Python.variableDB_.getName(a.getFieldValue("LIST"),Blockly.Variables.NAME_TYPE),c=Blockly.Python.valueToCode(a,"ITEM",Blockly.Python.ORDER_NONE)||"None";a=Blockly.Python.valueToCode(a,"INDEX",Blockly.Python.ORDER_MULTIPLICATIVE)||"0";return b+".insert("+a+", "+c+")\n"};
Blockly.Python.data_replaceitemoflist=function(a){var b=Blockly.Python.variableDB_.getName(a.getFieldValue("LIST"),Blockly.Variables.NAME_TYPE),c=Blockly.Python.valueToCode(a,"ITEM",Blockly.Python.ORDER_NONE)||"None";a=Blockly.Python.valueToCode(a,"INDEX",Blockly.Python.ORDER_MULTIPLICATIVE)||"0";return b+"["+a+"] = "+c+"\n"};
Blockly.Python.data_itemnumoflist=function(a){var b=Blockly.Python.variableDB_.getName(a.getFieldValue("LIST"),Blockly.Variables.NAME_TYPE);a=Blockly.Python.valueToCode(a,"ITEM",Blockly.Python.ORDER_NONE)||"None";return[b+".index("+a+")",Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.lists_sort=function(a){var b=Blockly.Python.valueToCode(a,"LIST",Blockly.Python.ORDER_NONE)||"[]",c=a.getFieldValue("TYPE");a="1"===a.getFieldValue("DIRECTION")?"False":"True";return[Blockly.Python.provideFunction_("lists_sort",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(my_list, type, reverse):","  def try_float(s):","    try:","      return float(s)","    except:","      return 0","  key_funcs = {",'    "NUMERIC": try_float,','    "TEXT": str,','    "IGNORE_CASE": lambda s: str(s).lower()',
"  }","  key_func = key_funcs[type]","  list_cpy = list(my_list)","  return sorted(list_cpy, key=key_func, reverse=reverse)"])+"("+b+', "'+c+'", '+a+")",Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.lists_split=function(a){var b=a.getFieldValue("MODE");if("SPLIT"==b)b=Blockly.Python.valueToCode(a,"INPUT",Blockly.Python.ORDER_MEMBER)||"''",a=Blockly.Python.valueToCode(a,"DELIM",Blockly.Python.ORDER_NONE),a=b+".split("+a+")";else if("JOIN"==b)b=Blockly.Python.valueToCode(a,"INPUT",Blockly.Python.ORDER_NONE)||"[]",a=Blockly.Python.valueToCode(a,"DELIM",Blockly.Python.ORDER_MEMBER)||"''",a=a+".join("+b+")";else throw"Unknown mode: "+b;return[a,Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.lists_reverse=function(a){return["list(reversed("+(Blockly.Python.valueToCode(a,"LIST",Blockly.Python.ORDER_NONE)||"[]")+"))",Blockly.Python.ORDER_FUNCTION_CALL]};Blockly.Python.lists_repeat=function(a){var b=Blockly.Python.valueToCode(a,"ITEM",Blockly.Python.ORDER_NONE)||"None";a=Blockly.Python.valueToCode(a,"NUM",Blockly.Python.ORDER_MULTIPLICATIVE)||"0";return["["+b+"] * "+a,Blockly.Python.ORDER_MULTIPLICATIVE]};
Blockly.Python.lists_isEmpty=function(a){return["not len("+(Blockly.Python.valueToCode(a,"VALUE",Blockly.Python.ORDER_NONE)||"[]")+")",Blockly.Python.ORDER_LOGICAL_NOT]};
Blockly.Python.lists_indexOf=function(a){var b=Blockly.Python.valueToCode(a,"FIND",Blockly.Python.ORDER_NONE)||"[]",c=Blockly.Python.valueToCode(a,"VALUE",Blockly.Python.ORDER_NONE)||"''";if(a.workspace.options.oneBasedIndex)var d=" 0",e=" + 1",f="";else d=" -1",e="",f=" - 1";if("FIRST"==a.getFieldValue("END"))return a=Blockly.Python.provideFunction_("first_index",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(my_list, elem):","  try: index = my_list.index(elem)"+e,"  except: index ="+d,"  return index"]),
[a+"("+c+", "+b+")",Blockly.Python.ORDER_FUNCTION_CALL];a=Blockly.Python.provideFunction_("last_index",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(my_list, elem):","  try: index = len(my_list) - my_list[::-1].index(elem)"+f,"  except: index ="+d,"  return index"]);return[a+"("+c+", "+b+")",Blockly.Python.ORDER_FUNCTION_CALL]};Blockly.Python.logic={};Blockly.Python.control_if=function(a){var b=Blockly.Python.valueToCode(a,"CONDITION",Blockly.Python.ORDER_NONE)||"False";a=Blockly.Python.statementToCode(a,"SUBSTACK")||Blockly.Python.PASS;return"if "+b+":\n"+a};
Blockly.Python.control_if_else=function(a){var b=Blockly.Python.valueToCode(a,"CONDITION",Blockly.Python.ORDER_NONE)||"False";var c=Blockly.Python.statementToCode(a,"SUBSTACK")||Blockly.Python.PASS;a=Blockly.Python.statementToCode(a,"SUBSTACK2")||Blockly.Python.PASS;return"if "+b+":\n"+c+"\nelse:\n"+a};
Blockly.Python.logic_compare=function(a){var b={EQ:"==",NEQ:"!=",LT:"<",LTE:"<=",GT:">",GTE:">="}[a.getFieldValue("OP")],c=Blockly.Python.ORDER_RELATIONAL,d=Blockly.Python.valueToCode(a,"A",c)||"0";a=Blockly.Python.valueToCode(a,"B",c)||"0";return[d+" "+b+" "+a,c]};
Blockly.Python.logic_operation=function(a){var b="AND"==a.getFieldValue("OP")?"and":"or",c="and"==b?Blockly.Python.ORDER_LOGICAL_AND:Blockly.Python.ORDER_LOGICAL_OR,d=Blockly.Python.valueToCode(a,"A",c);a=Blockly.Python.valueToCode(a,"B",c);if(d||a){var e="and"==b?"True":"False";d||(d=e);a||(a=e)}else a=d="False";return[d+" "+b+" "+a,c]};Blockly.Python.logic_negate=function(a){return["not "+(Blockly.Python.valueToCode(a,"BOOL",Blockly.Python.ORDER_LOGICAL_NOT)||"True"),Blockly.Python.ORDER_LOGICAL_NOT]};
Blockly.Python.logic_boolean=function(a){return["TRUE"==a.getFieldValue("BOOL")?"True":"False",Blockly.Python.ORDER_ATOMIC]};Blockly.Python.logic_null=function(a){return["None",Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.logic_ternary=function(a){var b=Blockly.Python.valueToCode(a,"IF",Blockly.Python.ORDER_CONDITIONAL)||"False",c=Blockly.Python.valueToCode(a,"THEN",Blockly.Python.ORDER_CONDITIONAL)||"None";a=Blockly.Python.valueToCode(a,"ELSE",Blockly.Python.ORDER_CONDITIONAL)||"None";return[c+" if "+b+" else "+a,Blockly.Python.ORDER_CONDITIONAL]};
Blockly.Python.operator_lt=function(a){var b=Blockly.Python.ORDER_RELATIONAL,c=Blockly.Python.valueToCode(a,"OPERAND1",b)||"0";a=Blockly.Python.valueToCode(a,"OPERAND2",b)||"0";return[c+" < "+a,b]};Blockly.Python.operator_equals=function(a){var b=Blockly.Python.ORDER_RELATIONAL,c=Blockly.Python.valueToCode(a,"OPERAND1",b)||"0";a=Blockly.Python.valueToCode(a,"OPERAND2",b)||"0";return[c+" == "+a,b]};
Blockly.Python.operator_gt=function(a){var b=Blockly.Python.ORDER_RELATIONAL,c=Blockly.Python.valueToCode(a,"OPERAND1",b)||"0";a=Blockly.Python.valueToCode(a,"OPERAND2",b)||"0";return[c+" > "+a,b]};Blockly.Python.operator_and=function(a){var b=Blockly.Python.ORDER_LOGICAL_AND,c=Blockly.Python.valueToCode(a,"OPERAND1",b);a=Blockly.Python.valueToCode(a,"OPERAND2",b);c||a?(c||(c="True"),a||(a="True")):a=c="False";return[c+" and "+a,b]};
Blockly.Python.operator_or=function(a){var b=Blockly.Python.ORDER_LOGICAL_OR,c=Blockly.Python.valueToCode(a,"OPERAND1",b);a=Blockly.Python.valueToCode(a,"OPERAND2",b);c||a?(c||(c="False"),a||(a="False")):a=c="False";return[c+" or "+a,b]};Blockly.Python.operator_not=function(a){return["not "+(Blockly.Python.valueToCode(a,"OPERAND",Blockly.Python.ORDER_LOGICAL_NOT)||"True"),Blockly.Python.ORDER_LOGICAL_NOT]};
Blockly.Python.operator_join=function(a){var b=Blockly.Python.valueToCode(a,"STRING1",Blockly.Python.ORDER_STRING_CONVERSION)||"";a=Blockly.Python.valueToCode(a,"STRING2",Blockly.Python.ORDER_STRING_CONVERSION)||"";return[b+" + "+a,Blockly.Python.ORDER_ATOMIC]};Blockly.Python.operator_letter_of=function(a){Blockly.Python.valueToCode(a,"LETTER",Blockly.Python.ORDER_ATOMIC);a=Blockly.Python.valueToCode(a,"STRING",Blockly.Python.ORDER_STRING_CONVERSION)||"";return[argument0+" + "+a,Blockly.Python.ORDER_ATOMIC]};Blockly.Python.loops={};Blockly.Python.control_repeat=function(a){var b=a.getField("TIMES")?String(parseInt(a.getFieldValue("TIMES"),10)):Blockly.Python.valueToCode(a,"TIMES",Blockly.Python.ORDER_NONE)||"0";b=Blockly.isNumber(b)?parseInt(b,10):"int("+b+")";Blockly.Python.statementToCode(a,"DO");a=Blockly.Python.statementToCode(a,"SUBSTACK")||Blockly.Python.PASS;return"for "+Blockly.Python.variableDB_.getDistinctName("count",Blockly.Variables.NAME_TYPE)+" in range("+b+"):\n"+a};
Blockly.Python.controls_repeat=Blockly.Python.controls_repeat_ext;Blockly.Python.control_repeat_until=function(a){var b="UNTIL"==a.getFieldValue("MODE"),c=Blockly.Python.valueToCode(a,"CONDITION",b?Blockly.Python.ORDER_LOGICAL_NOT:Blockly.Python.ORDER_NONE)||"False";Blockly.Python.statementToCode(a,"DO");a=Blockly.Python.statementToCode(a,"SUBSTACK")||Blockly.Python.PASS;b&&(c="not "+c);return"while "+c+":\n"+a};
Blockly.Python.control_forever=function(a){Blockly.Python.statementToCode(a,"DO");return"while True:\n"+(Blockly.Python.statementToCode(a,"SUBSTACK")||Blockly.Python.PASS)};
Blockly.Python.controls_for=function(a){var b=Blockly.Python.variableDB_.getName(a.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE),c=Blockly.Python.valueToCode(a,"FROM",Blockly.Python.ORDER_NONE)||"0",d=Blockly.Python.valueToCode(a,"TO",Blockly.Python.ORDER_NONE)||"0",e=Blockly.Python.valueToCode(a,"BY",Blockly.Python.ORDER_NONE)||"1",f=Blockly.Python.statementToCode(a,"DO");f=Blockly.Python.addLoopTrap(f,a.id)||Blockly.Python.PASS;var g="",h=function(){return Blockly.Python.provideFunction_("upRange",
["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(start, stop, step):","  while start <= stop:","    yield start","    start += abs(step)"])},k=function(){return Blockly.Python.provideFunction_("downRange",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(start, stop, step):","  while start >= stop:","    yield start","    start -= abs(step)"])};a=function(a,b,c){return"("+a+" <= "+b+") and "+h()+"("+a+", "+b+", "+c+") or "+k()+"("+a+", "+b+", "+c+")"};if(Blockly.isNumber(c)&&Blockly.isNumber(d)&&
Blockly.isNumber(e))c=parseFloat(c),d=parseFloat(d),e=Math.abs(parseFloat(e)),0===c%1&&0===d%1&&0===e%1?(c<=d?(d++,a=0==c&&1==e?d:c+", "+d,1!=e&&(a+=", "+e)):(d--,a=c+", "+d+", -"+e),a="range("+a+")"):(a=c<d?h():k(),a+="("+c+", "+d+", "+e+")");else{var l=function(a,c){Blockly.isNumber(a)?a=parseFloat(a):a.match(/^\w+$/)?a="float("+a+")":(c=Blockly.Python.variableDB_.getDistinctName(b+c,Blockly.Variables.NAME_TYPE),g+=c+" = float("+a+")\n",a=c);return a};c=l(c,"_start");d=l(d,"_end");l(e,"_inc");a=
"number"==typeof c&&"number"==typeof d?c<d?h(c,d,e):k(c,d,e):a(c,d,e)}return g+="for "+b+" in "+a+":\n"+f};Blockly.Python.controls_forEach=function(a){var b=Blockly.Python.variableDB_.getName(a.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE),c=Blockly.Python.valueToCode(a,"LIST",Blockly.Python.ORDER_RELATIONAL)||"[]",d=Blockly.Python.statementToCode(a,"DO");d=Blockly.Python.addLoopTrap(d,a.id)||Blockly.Python.PASS;return"for "+b+" in "+c+":\n"+d};
Blockly.Python.controls_flow_statements=function(a){switch(a.getFieldValue("FLOW")){case "BREAK":return"break\n";case "CONTINUE":return"continue\n"}throw"Unknown flow statement.";};Blockly.Python.control_stop=function(a){switch(a.getFieldValue("STOP_OPTION")){case "all":return"return\n";case "this script":return"break\n"}throw"Unknown flow statement.";};Blockly.Python.math={};Blockly.Python.addReservedWords("math,random,Number");Blockly.Python.math_number=function(a){a=parseFloat(a.getFieldValue("NUM"));if(Infinity==a){a='float("inf")';var b=Blockly.Python.ORDER_FUNCTION_CALL}else-Infinity==a?(a='-float("inf")',b=Blockly.Python.ORDER_UNARY_SIGN):b=0>a?Blockly.Python.ORDER_UNARY_SIGN:Blockly.Python.ORDER_ATOMIC;return[a,b]};Blockly.Python.math_whole_number=Blockly.Python.math_number;Blockly.Python.math_integer=Blockly.Python.math_number;
Blockly.Python.operator_add=function(a){var b=Blockly.Python.ORDER_ADDITIVE,c=Blockly.Python.valueToCode(a,"NUM1",b)||"0";a=Blockly.Python.valueToCode(a,"NUM2",b)||"0";return[c+" + "+a,b]};Blockly.Python.operator_subtract=function(a){var b=Blockly.Python.ORDER_ADDITIVE,c=Blockly.Python.valueToCode(a,"NUM1",b)||"0";a=Blockly.Python.valueToCode(a,"NUM2",b)||"0";return[c+" - "+a,b]};
Blockly.Python.operator_multiply=function(a){var b=Blockly.Python.ORDER_MULTIPLICATIVE,c=Blockly.Python.valueToCode(a,"NUM1",b)||"0";a=Blockly.Python.valueToCode(a,"NUM2",b)||"0";return[c+" * "+a,b]};Blockly.Python.operator_divide=function(a){var b=Blockly.Python.ORDER_MULTIPLICATIVE,c=Blockly.Python.valueToCode(a,"NUM1",b)||"0";a=Blockly.Python.valueToCode(a,"NUM2",b)||"0";return[c+" / "+a,b]};
Blockly.Python.operator_mod=function(a){var b=Blockly.Python.ORDER_MULTIPLICATIVE,c=Blockly.Python.valueToCode(a,"NUM1",b)||"0";a=Blockly.Python.valueToCode(a,"NUM2",b)||"0";return[c+" % "+a,b]};
Blockly.Python.math_arithmetic=function(a){var b={ADD:[" + ",Blockly.Python.ORDER_ADDITIVE],MINUS:[" - ",Blockly.Python.ORDER_ADDITIVE],MULTIPLY:[" * ",Blockly.Python.ORDER_MULTIPLICATIVE],DIVIDE:[" / ",Blockly.Python.ORDER_MULTIPLICATIVE],POWER:[" ** ",Blockly.Python.ORDER_EXPONENTIATION]}[a.getFieldValue("OP")],c=b[0];b=b[1];var d=Blockly.Python.valueToCode(a,"A",b)||"0";a=Blockly.Python.valueToCode(a,"B",b)||"0";return[d+c+a,b]};
Blockly.Python.math_single=function(a){var b=a.getFieldValue("OP");if("NEG"==b){var c=Blockly.Python.valueToCode(a,"NUM",Blockly.Python.ORDER_UNARY_SIGN)||"0";return["-"+c,Blockly.Python.ORDER_UNARY_SIGN]}Blockly.Python.definitions_.import_math="import math";a="SIN"==b||"COS"==b||"TAN"==b?Blockly.Python.valueToCode(a,"NUM",Blockly.Python.ORDER_MULTIPLICATIVE)||"0":Blockly.Python.valueToCode(a,"NUM",Blockly.Python.ORDER_NONE)||"0";switch(b){case "ABS":c="math.fabs("+a+")";break;case "ROOT":c="math.sqrt("+
a+")";break;case "LN":c="math.log("+a+")";break;case "LOG10":c="math.log10("+a+")";break;case "EXP":c="math.exp("+a+")";break;case "POW10":c="math.pow(10,"+a+")";break;case "ROUND":c="round("+a+")";break;case "ROUNDUP":c="math.ceil("+a+")";break;case "ROUNDDOWN":c="math.floor("+a+")";break;case "SIN":c="math.sin("+a+" / 180.0 * math.pi)";break;case "COS":c="math.cos("+a+" / 180.0 * math.pi)";break;case "TAN":c="math.tan("+a+" / 180.0 * math.pi)"}if(c)return[c,Blockly.Python.ORDER_FUNCTION_CALL];switch(b){case "ASIN":c=
"math.asin("+a+") / math.pi * 180";break;case "ACOS":c="math.acos("+a+") / math.pi * 180";break;case "ATAN":c="math.atan("+a+") / math.pi * 180";break;default:throw"Unknown math operator: "+b;}return[c,Blockly.Python.ORDER_MULTIPLICATIVE]};
Blockly.Python.math_constant=function(a){var b={PI:["math.pi",Blockly.Python.ORDER_MEMBER],E:["math.e",Blockly.Python.ORDER_MEMBER],GOLDEN_RATIO:["(1 + math.sqrt(5)) / 2",Blockly.Python.ORDER_MULTIPLICATIVE],SQRT2:["math.sqrt(2)",Blockly.Python.ORDER_MEMBER],SQRT1_2:["math.sqrt(1.0 / 2)",Blockly.Python.ORDER_MEMBER],INFINITY:["float('inf')",Blockly.Python.ORDER_ATOMIC]};a=a.getFieldValue("CONSTANT");"INFINITY"!=a&&(Blockly.Python.definitions_.import_math="import math");return b[a]};
Blockly.Python.math_number_property=function(a){var b=Blockly.Python.valueToCode(a,"NUMBER_TO_CHECK",Blockly.Python.ORDER_MULTIPLICATIVE)||"0",c=a.getFieldValue("PROPERTY");if("PRIME"==c)return Blockly.Python.definitions_.import_math="import math",Blockly.Python.definitions_.from_numbers_import_Number="from numbers import Number",[Blockly.Python.provideFunction_("math_isPrime",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(n):","  # https://en.wikipedia.org/wiki/Primality_test#Naive_methods",
"  # If n is not a number but a string, try parsing it.","  if not isinstance(n, Number):","    try:","      n = float(n)","    except:","      return False","  if n == 2 or n == 3:","    return True","  # False if n is negative, is 1, or not whole, or if n is divisible by 2 or 3.","  if n <= 1 or n % 1 != 0 or n % 2 == 0 or n % 3 == 0:","    return False","  # Check all the numbers of form 6k +/- 1, up to sqrt(n).","  for x in range(6, int(math.sqrt(n)) + 2, 6):","    if n % (x - 1) == 0 or n % (x + 1) == 0:",
"      return False","  return True"])+"("+b+")",Blockly.Python.ORDER_FUNCTION_CALL];switch(c){case "EVEN":var d=b+" % 2 == 0";break;case "ODD":d=b+" % 2 == 1";break;case "WHOLE":d=b+" % 1 == 0";break;case "POSITIVE":d=b+" > 0";break;case "NEGATIVE":d=b+" < 0";break;case "DIVISIBLE_BY":a=Blockly.Python.valueToCode(a,"DIVISOR",Blockly.Python.ORDER_MULTIPLICATIVE);if(!a||"0"==a)return["False",Blockly.Python.ORDER_ATOMIC];d=b+" % "+a+" == 0"}return[d,Blockly.Python.ORDER_RELATIONAL]};
Blockly.Python.math_change=function(a){Blockly.Python.definitions_.from_numbers_import_Number="from numbers import Number";var b=Blockly.Python.valueToCode(a,"DELTA",Blockly.Python.ORDER_ADDITIVE)||"0";a=Blockly.Python.variableDB_.getName(a.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE);return a+" = ("+a+" if isinstance("+a+", Number) else 0) + "+b+"\n"};
Blockly.Python.operator_round=function(a){Blockly.Python.definitions_.import_math="import math";return(a="round("+(Blockly.Python.valueToCode(a,"NUM",Blockly.Python.ORDER_NONE)||"0")+")")?[a,Blockly.Python.ORDER_FUNCTION_CALL]:[a,Blockly.Python.ORDER_MULTIPLICATIVE]};
Blockly.Python.operator_mathop=function(a){var b=a.getFieldValue("OPERATOR");if("NEG"==b){var c=Blockly.Python.valueToCode(a,"NUM",Blockly.Python.ORDER_UNARY_SIGN)||"0";return["-"+c,Blockly.Python.ORDER_UNARY_SIGN]}Blockly.Python.definitions_.import_math="import math";a="sin"==b||"cos"==b||"tan"==b?Blockly.Python.valueToCode(a,"NUM",Blockly.Python.ORDER_MULTIPLICATIVE)||"0":Blockly.Python.valueToCode(a,"NUM",Blockly.Python.ORDER_NONE)||"0";switch(b){case "abs":c="math.fabs("+a+")";break;case "floor":c=
"math.floor("+a+")";break;case "ceiling":c="math.ceil("+a+")";break;case "sqrt":c="math.sqrt("+a+")";break;case "sin":c="math.sin("+a+")";break;case "cos":c="math.cos("+a+")";break;case "tan":c="math.tan("+a+")";break;case "ln":c="math.log("+a+")";break;case "log":c="math.log10("+a+")";break;case "e ^":c="math.exp("+a+")";break;case "10 ^":c="math.pow(10,"+a+")"}if(c)return[c,Blockly.Python.ORDER_FUNCTION_CALL];switch(b){case "asin":c="math.asin("+a+")";break;case "acos":c="math.acos("+a+")";break;
case "atan":c="math.atan("+a+")";break;default:throw"Unknown math operator: "+b;}return[c,Blockly.Python.ORDER_MULTIPLICATIVE]};Blockly.Python.math_trig=Blockly.Python.math_single;
Blockly.Python.math_on_list=function(a){var b=a.getFieldValue("OP");a=Blockly.Python.valueToCode(a,"LIST",Blockly.Python.ORDER_NONE)||"[]";switch(b){case "SUM":b="sum("+a+")";break;case "MIN":b="min("+a+")";break;case "MAX":b="max("+a+")";break;case "AVERAGE":Blockly.Python.definitions_.from_numbers_import_Number="from numbers import Number";b=Blockly.Python.provideFunction_("math_mean",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(myList):","  localList = [e for e in myList if isinstance(e, Number)]",
"  if not localList: return","  return float(sum(localList)) / len(localList)"]);b=b+"("+a+")";break;case "MEDIAN":Blockly.Python.definitions_.from_numbers_import_Number="from numbers import Number";b=Blockly.Python.provideFunction_("math_median",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(myList):","  localList = sorted([e for e in myList if isinstance(e, Number)])","  if not localList: return","  if len(localList) % 2 == 0:","    return (localList[len(localList) // 2 - 1] + localList[len(localList) // 2]) / 2.0",
"  else:","    return localList[(len(localList) - 1) // 2]"]);b=b+"("+a+")";break;case "MODE":b=Blockly.Python.provideFunction_("math_modes",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(some_list):","  modes = []","  # Using a lists of [item, count] to keep count rather than dict",'  # to avoid "unhashable" errors when the counted item is itself a list or dict.',"  counts = []","  maxCount = 1","  for item in some_list:","    found = False","    for count in counts:","      if count[0] == item:",
"        count[1] += 1","        maxCount = max(maxCount, count[1])","        found = True","    if not found:","      counts.append([item, 1])","  for counted_item, item_count in counts:","    if item_count == maxCount:","      modes.append(counted_item)","  return modes"]);b=b+"("+a+")";break;case "STD_DEV":Blockly.Python.definitions_.import_math="import math";b=Blockly.Python.provideFunction_("math_standard_deviation",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(numbers):","  n = len(numbers)",
"  if n == 0: return","  mean = float(sum(numbers)) / n","  variance = sum((x - mean) ** 2 for x in numbers) / n","  return math.sqrt(variance)"]);b=b+"("+a+")";break;case "RANDOM":Blockly.Python.definitions_.import_random="import random";b="random.choice("+a+")";break;default:throw"Unknown operator: "+b;}return[b,Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.math_modulo=function(a){var b=Blockly.Python.valueToCode(a,"DIVIDEND",Blockly.Python.ORDER_MULTIPLICATIVE)||"0";a=Blockly.Python.valueToCode(a,"DIVISOR",Blockly.Python.ORDER_MULTIPLICATIVE)||"0";return[b+" % "+a,Blockly.Python.ORDER_MULTIPLICATIVE]};
Blockly.Python.math_constrain=function(a){var b=Blockly.Python.valueToCode(a,"VALUE",Blockly.Python.ORDER_NONE)||"0",c=Blockly.Python.valueToCode(a,"LOW",Blockly.Python.ORDER_NONE)||"0";a=Blockly.Python.valueToCode(a,"HIGH",Blockly.Python.ORDER_NONE)||"float('inf')";return["min(max("+b+", "+c+"), "+a+")",Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.operator_random=function(a){Blockly.Python.definitions_.import_random="import random";var b=Blockly.Python.valueToCode(a,"FROM",Blockly.Python.ORDER_NONE)||"0";a=Blockly.Python.valueToCode(a,"TO",Blockly.Python.ORDER_NONE)||"0";return["random.randint("+b+", "+a+")",Blockly.Python.ORDER_FUNCTION_CALL]};Blockly.Python.math_random_float=function(a){Blockly.Python.definitions_.import_random="import random";return["random.random()",Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.operator_pow=function(a){var b=Blockly.Python.valueToCode(a,"NUM1",Blockly.Python.ORDER_NONE)||"0";a=Blockly.Python.valueToCode(a,"NUM2",Blockly.Python.ORDER_NONE)||"0";return["math.pow("+b+", "+a+")",Blockly.Python.ORDER_FUNCTION_CALL]};Blockly.Python.procedures={};Blockly.Python.func=function(a){if(null===a)return"";Blockly.Python.statementToCode(a,"DO");var b=Blockly.Python.statementToCode(a,"SUBSTACK")||Blockly.Python.PASS;var c=Blockly.Workspace.getById(a.workspace.id),d=c.getAllVariables();c.isFlyout||c.getFlyout();for(c=0;c<d.length;c++)Blockly.Python.variableDB_.getName(d[c].getId(),Blockly.Variables.NAME_TYPE),Blockly.Blocks.updateFuncUniqueDef(a.id,b);return""};
Blockly.Python.function_call=function(a){return Blockly.Python.variableDB_.getName(a.getFieldValue("func"),Blockly.Variables.NAME_TYPE)+"()\n"};Blockly.Python.return_nothing=function(a){return"return\n"};Blockly.Python.return_something=function(a){return"return "+(Blockly.Python.valueToCode(a,"VALUE",Blockly.Python.ORDER_NONE)||0)};
Blockly.Python.procedures_defreturn=function(a){for(var b=[],c,d=a.workspace,e=Blockly.Variables.allUsedVarModels(d)||[],f=0;c=e[f];f++)c=c.name,-1==a.arguments_.indexOf(c)&&b.push(Blockly.Python.variableDB_.getName(c,Blockly.Variables.NAME_TYPE));d=Blockly.Variables.allDeveloperVariables(d);for(f=0;f<d.length;f++)b.push(Blockly.Python.variableDB_.getName(d[f],Blockly.Names.DEVELOPER_VARIABLE_TYPE));b=b.length?Blockly.Python.INDENT+"global "+b.join(", ")+"\n":"";d=Blockly.Python.variableDB_.getName(a.getFieldValue("NAME"),
Blockly.Procedures.NAME_TYPE);e=Blockly.Python.statementToCode(a,"STACK");Blockly.Python.STATEMENT_PREFIX&&(f=a.id.replace(/\$/g,"$$$$"),e=Blockly.Python.prefixLines(Blockly.Python.STATEMENT_PREFIX.replace(/%1/g,"'"+f+"'"),Blockly.Python.INDENT)+e);Blockly.Python.INFINITE_LOOP_TRAP&&(e=Blockly.Python.INFINITE_LOOP_TRAP.replace(/%1/g,'"'+a.id+'"')+e);(c=Blockly.Python.valueToCode(a,"RETURN",Blockly.Python.ORDER_NONE)||"")?c=Blockly.Python.INDENT+"return "+c+"\n":e||(e=Blockly.Python.PASS);var g=[];
for(f=0;f<a.arguments_.length;f++)g[f]=Blockly.Python.variableDB_.getName(a.arguments_[f],Blockly.Variables.NAME_TYPE);b="def "+d+"("+g.join(", ")+"):\n"+b+e+c;b=Blockly.Python.scrub_(a,b);Blockly.Python.definitions_["%"+d]=b;return null};Blockly.Python.procedures_defnoreturn=Blockly.Python.procedures_defreturn;
Blockly.Python.procedures_callreturn=function(a){for(var b=Blockly.Python.variableDB_.getName(a.getFieldValue("NAME"),Blockly.Procedures.NAME_TYPE),c=[],d=0;d<a.arguments_.length;d++)c[d]=Blockly.Python.valueToCode(a,"ARG"+d,Blockly.Python.ORDER_NONE)||"None";return[b+"("+c.join(", ")+")",Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.procedures_callnoreturn=function(a){for(var b=Blockly.Python.variableDB_.getName(a.getFieldValue("NAME"),Blockly.Procedures.NAME_TYPE),c=[],d=0;d<a.arguments_.length;d++)c[d]=Blockly.Python.valueToCode(a,"ARG"+d,Blockly.Python.ORDER_NONE)||"None";return b+"("+c.join(", ")+")\n"};
Blockly.Python.procedures_ifreturn=function(a){var b="if "+(Blockly.Python.valueToCode(a,"CONDITION",Blockly.Python.ORDER_NONE)||"False")+":\n";a.hasReturnValue_?(a=Blockly.Python.valueToCode(a,"VALUE",Blockly.Python.ORDER_NONE)||"None",b+=Blockly.Python.INDENT+"return "+a+"\n"):b+=Blockly.Python.INDENT+"return\n";return b};var NODETYPE={FUNC:1,CONTROL:2,EXECUTE:3};function RootNode(){this.children=[]}function Node(a){this.lineData=a;this.parent=null;this.children=[];this.xml=""}function Tree(){this.root=new RootNode}Tree.prototype.DFS=function(a){(function d(c){for(var e=0,f=c.children.length;e<f;e++)d(c.children[e]);c.lineData&&a(c)})(this.root)};
Tree.prototype.serialize=function(){var a="";(function d(c){var e="";if(c.lineData){var f=c.xml.match(/^<([^ ^>]+)/);null!==f&&(e=f[1]);a+=c.xml;a+='<statement name="SUBSTACK">';f="";for(var g=0,h=c.children.length;g<h;g++){var k=d(c.children[g]);a+="<next>";f="</next></"+k+">"+f}a+=f;a+="</statement>"}else{f="";g=0;for(h=c.children.length;g<h;g++)k=d(c.children[g]),a+="<next>",f="</next></"+k+">"+f;a+=f}return e})(this.root);a=a.replace(/<statement name="SUBSTACK"><\/statement>/g,"");a=a.replace(/<next><\/next>/g,
"");return"<xml>"+a+"</xml>"};Tree.prototype.lastNodeOfDepth=function(a){return function e(c,d){return a===d||0===c.children.length?c:e(c.children[c.children.length-1],d+1)}(this.root,0)};
Blockly.Python.revert=function(a){a=a.split(/[\r\n]+/);for(var b="  ",c=0;c<a.length;c++){var d=a[c].match(/^[ \t]+/);if(null!==d){b=d[0];break}}var e=new Tree;a.forEach(function(a){var c=getDepth(a,b);c=e.lastNodeOfDepth(c);a=new Node(a.trim());a.parent=c;c.children.push(a)});e.DFS(function(a){var b=splitHeader(a.lineData),c=b.header;b=b.body;b=c in revertHeaders?"("===b[0]?getFuncArgs(b):getControlArgs(b):getControlArgs(b);a.xml=procHeader(c,b)});return e.serialize()};
function procHeader(a,b){return a in revertHeaders?revertHeaders[a](b):b.toString()}function getDepth(a,b){a=a.match(/^[ \t]+/);return null===a?0:a[0].match(new RegExp(b,"g")).length}function splitHeader(a){var b=a.match(/^[^ ^\(^\)^\{^\}^\[^\]]+/);return null===b?null:{header:b[0],body:a.replace(new RegExp("^"+b[0]),"").trim()}}function getFuncArgs(a){var b=[];(a=a.match(/\(([\w\W]+)\)$/))&&0<a.length&&(a=a[1],a.split(",").forEach(function(a){b.push(a.trim())}));return b}
function getControlArgs(a){var b=[],c,d=/("[\w\W^"]+"|[\w'"\(\)]+|[\+\-\*\/=<>]+)/g;do(c=d.exec(a))&&0<c.length&&b.push(c[1]);while(c);return b}function extractFromComma(a){var b=a.match(/^['"]([\w\W]+)['"]$/);return b&&0<b.length?b[1]:a}
revertHeaders={"if":function(a){var b='<block type="control_if">';switch(a.length){case 2:b=b+'<value name="CONDITION">'+revertExecuters[a[0]](a[1]);b+="</value>";break;case 3:b+='<value name="CONDITION">',console.log(a[1]),b+=revertExecuters[a[1]](a[0],a[2]),b+="</value>"}return b},"else":function(a){},"for":function(a){},"while":function(a){},"break":function(a){},"continue":function(a){},"return":function(a){},def:function(a){},del:function(a){},str:function(a){},len:function(a){},find:function(a){},
upper:function(a){},lower:function(a){},title:function(a){},lstrip:function(a){},rstrip:function(a){},strip:function(a){},print:function(a){var b='<block type="texts_println"><value name="TEXT"><shadow type="text">';var c=splitHeader(a[0]);if(c){var d=c.header;c=c.body;d in revertHeaders?b="("===c[0]?b+'<field name="TEXT"> </field></shadow>'+revertHeaders[d](getFuncArgs(a)):b+'<field name="TEXT"> </field></shadow>'+revertHeaders[d](getControlArgs(a)):(b+='<field name="TEXT">'+extractFromComma(a[0])+
"</field>",b+="</shadow>")}else b+='<field name="TEXT">'+extractFromComma(a[0])+"</field>",b+="</shadow>";return b+"</value>"},count:function(a){},replace:function(a){},randint:function(a){},round:function(a){},fabs:function(a){},pow:function(a){},floor:function(a){},ceiling:function(a){},sqrt:function(a){},sin:function(a){},cos:function(a){},tan:function(a){},asin:function(a){},acos:function(a){},atan:function(a){},log:function(a){},log10:function(a){},exp:function(a){},range:function(a){},append:function(a){},
insert:function(a){}};revertExecuters={"==":function(a,b){a='<block type="operator_equals"><value name="OPERAND1"><shadow type="text">'+('<field name="TEXT">'+a+"</field>")+"</shadow></value>";a+='<value name="OPERAND2">';a+='<shadow type="text">';a+='<field name="TEXT">'+b+"</field>";a+="</shadow>";a+="</value>";return a+="</block>"}};Blockly.Python.texts={};Blockly.Python.text=function(a){return[Blockly.Python.quote_(a.getFieldValue("TEXT")),Blockly.Python.ORDER_ATOMIC]};Blockly.Python.texts_text=function(a){return["str("+(Blockly.Python.valueToCode(a,"VAR",Blockly.Python.ORDER_NONE)||"''")+")",Blockly.Python.ORDER_ADDITIVE]};
Blockly.Python.texts_append=function(a){var b=Blockly.Python.variableDB_.getName(a.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE);a=Blockly.Python.valueToCode(a,"TEXT",Blockly.Python.ORDER_NONE)||"''";return b+" = str("+b+") + str("+a+")\n"};Blockly.Python.texts_length=function(a){return["len("+(Blockly.Python.valueToCode(a,"VALUE",Blockly.Python.ORDER_NONE)||"''")+")",Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.texts_isEmpty=function(a){return["not len("+(Blockly.Python.valueToCode(a,"VALUE",Blockly.Python.ORDER_NONE)||"''")+")",Blockly.Python.ORDER_LOGICAL_NOT]};
Blockly.Python.texts_indexOf=function(a){var b="FIRST"==a.getFieldValue("END")?"find":"rfind",c=Blockly.Python.valueToCode(a,"FIND",Blockly.Python.ORDER_NONE)||"''";b=(Blockly.Python.valueToCode(a,"VALUE",Blockly.Python.ORDER_MEMBER)||"''")+"."+b+"("+c+")";return a.workspace.options.oneBasedIndex?[b+" + 1",Blockly.Python.ORDER_ADDITIVE]:[b,Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.texts_charAt=function(a){var b=Blockly.Python.valueToCode(a,"WHERE",Blockly.Python.ORDER_MEMBER)||"''";return[(Blockly.Python.valueToCode(a,"VALUE",Blockly.Python.ORDER_MEMBER)||"''")+"["+b+"]",Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.texts_getSubstring=function(a){var b=a.getFieldValue("WHERE1"),c=a.getFieldValue("WHERE2"),d=Blockly.Python.valueToCode(a,"STRING",Blockly.Python.ORDER_MEMBER)||"''";switch(b){case "FROM_START":b=Blockly.Python.getAdjustedInt(a,"AT1",1);"0"==b&&(b="");break;case "FROM_END":b=Blockly.Python.getAdjustedInt(a,"AT1",1,!0);break;case "FIRST":b="";break;default:throw"Unhandled option (text_getSubstring)";}switch(c){case "FROM_START":a=Blockly.Python.getAdjustedInt(a,"AT2",1);break;case "FROM_END":a=
Blockly.Python.getAdjustedInt(a,"AT2",0,!0);Blockly.isNumber(String(a))?"0"==a&&(a=""):(Blockly.Python.definitions_.import_sys="import sys",a+=" or sys.maxsize");break;case "LAST":a="";break;default:throw"Unhandled option (text_getSubstring)";}return[d+"["+b+" : "+a+"]",Blockly.Python.ORDER_MEMBER]};
Blockly.Python.texts_changeCase=function(a){var b={UPPERCASE:".upper()",LOWERCASE:".lower()",TITLECASE:".title()"}[a.getFieldValue("CASE")];return[(Blockly.Python.valueToCode(a,"TEXT",Blockly.Python.ORDER_MEMBER)||"''")+b,Blockly.Python.ORDER_FUNCTION_CALL]};Blockly.Python.texts_trim=function(a){var b={LEFT:".lstrip()",RIGHT:".rstrip()",BOTH:".strip()"}[a.getFieldValue("MODE")];return[(Blockly.Python.valueToCode(a,"TEXT",Blockly.Python.ORDER_MEMBER)||"''")+b,Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.texts_println=function(a){return"print("+(Blockly.Python.valueToCode(a,"TEXT",Blockly.Python.ORDER_NONE)||"''")+")\n"};Blockly.Python.texts_print=function(a){return"print("+(Blockly.Python.valueToCode(a,"TEXT",Blockly.Python.ORDER_NONE)||"''")+", end='')\n"};
Blockly.Python.texts_prompt_ext=function(a){var b=Blockly.Python.provideFunction_("text_prompt",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(msg):","  try:","    return raw_input(msg)","  except NameError:","    return input(msg)"]),c=a.getField("TEXT")?Blockly.Python.quote_(a.getFieldValue("TEXT")):Blockly.Python.valueToCode(a,"TEXT",Blockly.Python.ORDER_NONE)||"''";b=b+"("+c+")";"NUMBER"==a.getFieldValue("TYPE")&&(b="float("+b+")");return[b,Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.texts_prompt=Blockly.Python.texts_prompt_ext;Blockly.Python.texts_count=function(a){var b=Blockly.Python.valueToCode(a,"TEXT",Blockly.Python.ORDER_MEMBER)||"''";a=Blockly.Python.valueToCode(a,"SUB",Blockly.Python.ORDER_NONE)||"''";return[b+".count("+a+")",Blockly.Python.ORDER_MEMBER]};
Blockly.Python.texts_replace=function(a){var b=Blockly.Python.valueToCode(a,"TEXT",Blockly.Python.ORDER_MEMBER)||"''",c=Blockly.Python.valueToCode(a,"FROM",Blockly.Python.ORDER_NONE)||"''";a=Blockly.Python.valueToCode(a,"TO",Blockly.Python.ORDER_NONE)||"''";return[b+".replace("+c+", "+a+")",Blockly.Python.ORDER_MEMBER]};Blockly.Python.texts_reverse=function(a){return[(Blockly.Python.valueToCode(a,"TEXT",Blockly.Python.ORDER_MEMBER)||"''")+"[::-1]",Blockly.Python.ORDER_MEMBER]};Blockly.Python.variables={};Blockly.Python.data_variable=function(a){return[Blockly.Python.variableDB_.getName(a.getFieldValue("VARIABLE"),Blockly.Variables.NAME_TYPE),Blockly.Python.ORDER_ATOMIC]};Blockly.Python.data_setvariableto=function(a){var b=Blockly.Python.valueToCode(a,"VALUE",Blockly.Python.ORDER_NONE)||"0";return Blockly.Python.variableDB_.getName(a.getFieldValue("VARIABLE"),Blockly.Variables.NAME_TYPE)+" = "+b+"\n"};
Blockly.Python.variablesDynamic={};
